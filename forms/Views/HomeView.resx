<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        N/9T/wfGFRBmNGWikQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACiBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAARcSURBVHja7d3PTlR3GMfhL5VlWRjtslaTRi5EWUvX3TVpr6CZJkUZL8HCBr2B7qA3
        0JSmmyGuYCe7LtwALpuRiLSvYNWRPyptiHN+z++zdUHe95mZcw7ESU4+lzOTflayke0M87fGqmFtbaO2
        168tfpYPPBOZTi+/ZSd7Rjnm7dUW/8gPtdGJ913/lVKzaXSdar82ejdfvHv5k5nNWv1zI+sigrV8VRs+
        5Uzldr1hGFV3e1Ibnjpp/RezkF1D6ni7WaxNH/vqX3DJ18hl4eLRd4HJzHn1N/QucPvta4FZn/2NXQvM
        jt74rRlKYw1q668e+9x149fgTWH/30dD0x77NNlmbf7g9Lz+G30P6B3+ymfVMBpttbafGdf/zbaTm6lL
        AY9/2n0kNJ+sGETDLScbxtBw68m2MTTcVvyxV9MN4xlA488CDKHxjAAAASAABIAAEAACQAAIAAEgAASA
        ABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAZ+phlvLgzN3Pz/nLsscZQP/g
        m83O2if5Mo8te5wB3Ml/O1cBaBvANQAAsGwABIAAEAACQAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsGwABIAAE
        gAAQAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOgEgKv5M8/z7Bx7DsDHBGAqX+e7fHtufZNf
        APiYAJz/mQOgbQB3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAkfo10skxKvUTA/A/9jBLeTBGLdVPDIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJA
        AAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABoA8HsG8IDbefDI2h4YbJtjE03FayYQwNt56sGEPD
        Lb/4X633DKLR9jKfzGTHKBptJzeSy1k1ikZbre3X6XkW0OgzgN7hl5tMZ9M4GuxRrh8CmKgLQe8B7b3+
        52vzL8+VDIyksQa19TfOLfcCjV3/3xr9krML+TFPDaaRnmbu4JvNRs6nuZdnhtPE45+F2vYx52J+yq4B
        dbzdLNamTzhT9UHgt4Pd/uyfqy2fci7UxcHATWFHb/wGmT362X/0fF53iJsQdGz5j9IfvfE77UxkOt/n
        1/o48JvC8b/k287v6eX668c+73su5Wa9FyxnPVv+cGzsGtbW1mt787lx+Cuf488/2aAnqrnMwGQAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>